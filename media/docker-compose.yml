version: '3.7'
services:
  deluge:
    image: binhex/arch-delugevpn:latest
    container_name: deluge
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    ports:
      - 8112:8112
      - 8118:8118
      - 58846:58846
      - 58946:58946
    networks:
      - ${NETWORK}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VPN_ENABLED=yes
      - VPN_USER=${VPN_USER}
      - VPN_PASS=${VPN_PASS}
      - VPN_PROV=pia
      - STRICT_PORT_FORWARD=yes
      - ENABLE_PRIVOXY=yes
      - LAN_NETWORK=${LAN_NETWORK}
      - NAME_SERVERS=209.222.18.222,37.235.1.174,8.8.8.8,209.222.18.218,37.235.1.177,8.8.4.4
      - UMASK=000
      - DEBUG=false
    volumes:
      - /home/media/deluge/config:/config
      - /etc/localtime:/etc/localtime:ro
      - ${PATH_MEDIA}:/data
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${NETWORK}"
      - "traefik.http.routers.deluge.entrypoints=web,websecure"
      - "traefik.http.routers.deluge.rule=Host(`deluge.${BASE_HOST}`)"
      - "traefik.http.services.deluge.loadbalancer.server.port=8112"
      - "traefik.http.routers.deluge.tls=true"
      - "traefik.http.routers.deluge.tls.certresolver=leresolver"

  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    restart: unless-stopped
    networks:
      - ${NETWORK}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Paris
    volumes:
      - /home/media/jackett/config:/config
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${NETWORK}"
      - "traefik.http.routers.jackett.entrypoints=web,websecure"
      - "traefik.http.routers.jackett.rule=Host(`jackett.${BASE_HOST}`)"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"
      - "traefik.http.routers.jackett.tls=true"
      - "traefik.http.routers.jackett.tls.certresolver=leresolver"

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    ports:
      - 8989:8989
    networks:
      - ${NETWORK}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Paris
    volumes:
      - /home/media/sonarr/config:/config
      - ${PATH_MEDIA}:/data
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${NETWORK}"
      - "traefik.http.routers.sonarr.entrypoints=web,websecure"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${BASE_HOST}`)"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.tls.certresolver=leresolver"
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    ports:
      - 7878:7878
    networks:
      - ${NETWORK}
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Paris
    volumes:
      - /home/media/radarr/config:/config
      - ${PATH_MEDIA}:/data
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${NETWORK}"
      - "traefik.http.routers.radarr.entrypoints=web,websecure"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${BASE_HOST}`)"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.tls.certresolver=leresolver"

  lidarr:
    image: linuxserver/lidarr:latest
    container_name: lidarr
    networks:
      - ${NETWORK}
    restart: unless-stopped
    ports:
      - 8686:8686
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Paris
    volumes:
      - /home/media/lidarr/config:/config
      - ${PATH_MEDIA}:/data
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${NETWORK}"
      - "traefik.http.routers.lidarr.entrypoints=web,websecure"
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.${BASE_HOST}`)"
      - "traefik.http.services.lidarr.loadbalancer.server.port=8686"
      - "traefik.http.routers.lidarr.tls=true"
      - "traefik.http.routers.lidarr.tls.certresolver=leresolver"

  jellyfin:
    image: lscr.io/linuxserver/jellyfin
    container_name: jellyfin
    networks:
      - ${NETWORK}
    restart: unless-stopped
    ports:
      - 8096:8096
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Paris
    volumes:
      - /home/media/jellyfin/library:/config
      - ${PATH_MEDIA}/tv:/data/tvshows
      - ${PATH_MEDIA}/movies:/data/movies
      - ${PATH_MEDIA}/music:/data/music
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${NETWORK}"
      - "traefik.http.routers.jellyfin.entrypoints=web,websecure"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.${BASE_HOST}`)"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
      - "traefik.http.routers.jellyfin.tls=true"
      - "traefik.http.routers.jellyfin.tls.certresolver=leresolver"

  ombi:
    image: lscr.io/linuxserver/ombi
    container_name: ombi
    networks:
      - ${NETWORK}
    ports:
      - 3579:3579
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Paris
    volumes:
      - /home/media/ombi/config:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${NETWORK}"
      - "traefik.http.routers.ombi.entrypoints=web,websecure"
      - "traefik.http.routers.ombi.rule=Host(`ombi.${BASE_HOST}`)"
      - "traefik.http.services.ombi.loadbalancer.server.port=3579"
      - "traefik.http.routers.ombi.tls=true"
      - "traefik.http.routers.ombi.tls.certresolver=leresolver"

networks:
  traefik_network:
    external: true
